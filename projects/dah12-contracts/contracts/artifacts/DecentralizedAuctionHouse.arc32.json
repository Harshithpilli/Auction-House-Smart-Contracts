{
  "hints": {
    "createAuction(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "placeBid(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "finalizeAuction()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "cancelAuction()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteApplication()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "assetId": {
          "type": "uint64",
          "key": "assetId"
        },
        "startingPrice": {
          "type": "uint64",
          "key": "startingPrice"
        },
        "highestBid": {
          "type": "uint64",
          "key": "highestBid"
        },
        "highestBidder": {
          "type": "bytes",
          "key": "highestBidder"
        },
        "isActive": {
          "type": "bytes",
          "key": "isActive"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 3
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "DecentralizedAuctionHouse",
    "desc": "",
    "methods": [
      {
        "name": "createAuction",
        "args": [
          {
            "name": "assetId",
            "type": "uint64"
          },
          {
            "name": "startingPrice",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "placeBid",
        "args": [
          {
            "name": "bidTxn",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "finalizeAuction",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "cancelAuction",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}